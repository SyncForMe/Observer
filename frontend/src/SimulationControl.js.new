import React, { useState, useEffect, useRef } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import axios from 'axios';
import { useAuth } from './AuthContext';
import AgentCreateModal from './AgentCreateModal';

const API = process.env.REACT_APP_BACKEND_URL ? `${process.env.REACT_APP_BACKEND_URL}/api` : 'http://localhost:8001/api';

const SimulationControl = ({ setActiveTab, activeTab }) => {
  // ... all the state and functions ...

  return (
    <div className="min-h-screen bg-gradient-to-br from-purple-900 via-blue-900 to-indigo-900 text-white p-6">
      {/* Observatory Header */}
      <div className="mb-6">
        <h1 className="text-3xl font-bold mb-2">ðŸ”­ Observatory Control</h1>
        <p className="text-white/60">Manage your simulation agents and monitor conversations</p>
      </div>

      {/* Notification Bar */}
      <div className="relative w-full mb-6">
        <div className={`absolute top-0 left-1/2 transform -translate-x-1/2 w-4/5 h-12 bg-gradient-to-r from-purple-600/20 via-blue-600/30 to-purple-600/20 backdrop-blur-lg rounded-lg border border-white/10 overflow-hidden transition-all duration-700 ease-in-out ${
          showNotification ? 'opacity-100 translate-y-0' : 'opacity-0 -translate-y-4 pointer-events-none'
        }`}>
          <div className={`flex items-center justify-center h-full transition-transform duration-1000 ease-out ${
            showNotification ? 'transform translate-x-0' : 'transform translate-x-full'
          }`}>
            <div className="text-center">
              <span className="text-white font-medium text-lg tracking-wide drop-shadow-lg">
                {notificationText}
              </span>
            </div>
          </div>
          
          {/* Animated background glow */}
          <div className={`absolute inset-0 bg-gradient-to-r from-transparent via-white/5 to-transparent transition-all duration-2000 ${
            showNotification ? 'animate-pulse' : ''
          }`}></div>
          
          {/* Subtle border animation */}
          <div className={`absolute inset-0 rounded-lg transition-all duration-1000 ${
            showNotification ? 'shadow-lg shadow-purple-500/20' : ''
          }`}></div>
        </div>
      </div>

      {/* Rest of the component */}
      {/* ... */}
    </div>
  );
};

export default SimulationControl;